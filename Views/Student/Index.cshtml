@model IEnumerable<PhishFood.ViewModels.StudentListViewModel>
@using PhishFood.Helpers

@{
    ViewData["Title"] = "Students";
    string currentSort = ViewData["CurrentSort"] as string;
    Func<string, string> GetArrow = (string column) =>
    {
        return currentSort == column ? "▲"
             : currentSort == column.ToLower() + "_desc" ? "▼"
             : "";
    };
    var pagination = ViewBag.Pagination as PaginatedList<PhishFood.ViewModels.StudentListViewModel>;
}
<style>
    a {
        text-decoration: none;
    }
</style>

<h1 class="text-center my-5">@ViewData["Title"]</h1>
<!-- Search Form -->
<form asp-action="Index" method="get" class="text-center">
    <div class="search-container">
        <input type="text" name="searchQuery" value="@ViewData["searchQuery"]" class="search-input" placeholder="Search..." />
        <button type="submit" class="btn btn-outline-success search-button">Search</button>
        <a class="btn btn-outline-secondary clear-button" asp-action="Index">Clear</a>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IDSortParm"]" asp-route-searchQuery="@ViewData["searchQuery"]">
                    @Html.DisplayNameFor(model => model.First().ID) @GetArrow("ID")
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["FirstNameSortParm"]" asp-route-searchQuery="@ViewData["searchQuery"]">
                    @Html.DisplayNameFor(model => model.First().FirstName) @GetArrow("FirstName")
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSortParm"]" asp-route-searchQuery="@ViewData["searchQuery"]">
                    @Html.DisplayNameFor(model => model.First().LastName) @GetArrow("LastName")
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
        }
    </tbody>
</table>
@if (pagination != null && pagination.TotalPages > 1)
{
    <nav class="pagination-nav text-center">
        <ul class="pagination justify-content-center">
            @if (pagination.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@(pagination.PageIndex - 1)"
                       asp-route-searchQuery="@ViewData["SearchQuery"]"
                       asp-route-sortOrder="@ViewData["SortOrder"]">Previous</a>
                </li>
            }

            @for (var i = 1; i <= pagination.TotalPages; i++)
            {
                <li class="page-item @(i == pagination.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-searchQuery="@ViewData["SearchQuery"]"
                       asp-route-sortOrder="@ViewData["SortOrder"]"></a>
                </li>
            }

            @if (pagination.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@(pagination.PageIndex + 1)"
                       asp-route-searchQuery="@ViewData["SearchQuery"]"
                       asp-route-sortOrder="@ViewData["SortOrder"]">Next</a>
                </li>
            }
        </ul>
    </nav>
}

<p class="center">
    <a class="btn btn-outline-danger" asp-action="Create">Add New Student +</a>
</p>
