@model PhishFood.Helpers.PaginatedList<PhishFood.ViewModels.TrainingListViewModel>
@using PhishFood.Helpers

@{
    ViewData["Title"] = "Training Content";
    var showInactive = (bool?)ViewBag.ShowInactive ?? false;
    var displayModel = new PhishFood.ViewModels.TrainingListViewModel();
}

<style>
    a {
        text-decoration: none;
    }
</style>

<h1 class="text-center my-5">@ViewData["Title"]</h1>
<!-- Search Form -->
<form asp-action="Index" method="get" class="text-center">
    <div class="search-container">
        <input type="text" name="searchQuery" value="@ViewData["searchQuery"]" class="search-input" placeholder="Search..." />
        <button type="submit" class="btn btn-outline-success search-button">Search</button>
        <a class="btn btn-outline-secondary clear-button" asp-action="Index">Clear</a>
    </div>
    <div>
        <label>
            <input type="checkbox" name="showInactive" value="true" @(showInactive ? "checked" : "") onchange="this.form.submit()" />
            Show Inactive
        </label>
    </div>
</form>

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(_ => displayModel.ID)
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@(ViewData["SortOrder"]?.ToString() == "name_asc" ? "name_desc" : "name_asc")" asp-route-searchQuery="@ViewData["searchQuery"]" asp-route-showInactive="@ViewBag.ShowInactive">
                        @Html.DisplayNameFor(_ => displayModel.Name)
                        @if (ViewData["SortOrder"]?.ToString() == "name_asc")
                        {
                            <span>▲</span>
                        }
                        else if (ViewData["SortOrder"]?.ToString() == "name_desc")
                        {
                            <span>▼</span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@(ViewData["SortOrder"]?.ToString() == "cat_asc" ? "cat_desc" : "cat_asc")" asp-route-searchQuery="@ViewData["searchQuery"]" asp-route-showInactive="@ViewBag.ShowInactive">
                        @Html.DisplayNameFor(_ => displayModel.CategoryType)
                        @if (ViewData["SortOrder"]?.ToString() == "cat_asc")
                        {
                            <span>▲</span>
                        }
                        else if (ViewData["SortOrder"]?.ToString() == "cat_desc")
                        {
                            <span>▼</span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@(ViewData["SortOrder"]?.ToString() == "sub_asc" ? "sub_desc" : "sub_asc")" asp-route-searchQuery="@ViewData["searchQuery"]" asp-route-showInactive="@ViewBag.ShowInactive">
                        @Html.DisplayNameFor(_ => displayModel.SubcategoryType)
                        @if (ViewData["SortOrder"]?.ToString() == "sub_asc")
                        {
                            <span>▲</span>
                        }
                        else if (ViewData["SortOrder"]?.ToString() == "sub_desc")
                        {
                            <span>▼</span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-action="Index"
                       asp-route-sort="@(ViewData["SortOrder"]?.ToString() == "active_asc" ? "active_desc" : "active_asc")"
                       asp-route-searchQuery="@ViewData["searchQuery"]"
                       asp-route-showInactive="@ViewBag.ShowInactive">
                        @Html.DisplayNameFor(_ => displayModel.IsActive)
                        @if (ViewData["SortOrder"]?.ToString() == "active_asc")
                        {
                            <span>▲</span>
                        }
                        else if (ViewData["SortOrder"]?.ToString() == "active_desc")
                        {
                            <span>▼</span>
                        }
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ToList())
            {
                <tr>
                    <td>
                        @item.ID
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.CategoryType  
                    </td>
                    <td>
                        @item.SubcategoryType
                    </td>
                    <td>
                        @item.IsActive
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@if (ViewBag.Pagination != null && ViewBag.Pagination.TotalPages > 1)
{
    var pagination = ViewBag.Pagination as PaginatedList<PhishFood.ViewModels.TrainingListViewModel>;
    <nav class="pagination-nav text-center">
        <ul class="pagination justify-content-center">
            @if (pagination.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@(pagination.PageIndex - 1)"
                       asp-route-searchQuery="@ViewData["searchQuery"]"
                       asp-route-sort="@ViewData["SortOrder"]"
                       asp-route-showInactive="@ViewBag.ShowInactive">Previous</a>
                </li>
            }

            @for (var i = 1; i <= pagination.TotalPages; i++)
            {
                <li class="page-item @(i == pagination.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-searchQuery="@ViewData["searchQuery"]"
                       asp-route-sort="@ViewData["SortOrder"]"
                       asp-route-showInactive="@ViewBag.ShowInactive">@i</a>
                </li>
            }

            @if (pagination.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@(pagination.PageIndex + 1)"
                       asp-route-searchQuery="@ViewData["searchQuery"]"
                       asp-route-sort="@ViewData["SortOrder"]"
                       asp-route-showInactive="@ViewBag.ShowInactive">Next</a>
                </li>
            }
        </ul>
    </nav>
}

<p class="center">
    <a class="btn btn-outline-danger" asp-action="Create">Add New Content +</a>
</p>
