@model IEnumerable<PhishFood.Models.Training>

@{
    ViewData["Title"] = "Training Content";
    var showTraining = Context.Request.Query.ContainsKey("categoryId") &&
                       !string.IsNullOrEmpty(Context.Request.Query["categoryId"]) &&
                       Context.Request.Query.ContainsKey("subcategoryId") &&
                       !string.IsNullOrEmpty(Context.Request.Query["subcategoryId"]);
}

@section style {
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .slideshow-container {
            position: relative;
            max-width: 100%;
            width: 100%;
            max-width: 960px;
            margin: 60px auto;
            background: #ffffff;
            border-radius: 16px;
            box-shadow: 0 10px 24px rgba(0, 0, 0, 0.05);
            padding: 40px 30px;
            border: 1px solid #dee2e6;
            transition: all 0.3s ease;
        }

        .slides {
            display: none;
            animation: fadeIn 0.5s ease-in-out;
        }

        .slides.active {
            display: block;
        }

        .slides h1,
        .slides h3 {
            color: #1f2937;
            margin-bottom: 20px;
        }

        .num {
            font-weight: 600;
            color: #6c757d;
            font-size: 0.95rem;
            margin-bottom: 16px;
        }

        .content {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 24px 28px;
            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.03);
            border: 1px solid #e0e0e0;
            cursor: pointer;
            transition: background-color 0.25s ease;
        }

        .content:hover {
            background-color: #f1f3f5;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1050;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.6);
            align-items: center;
            justify-content: center;
            animation: fadeInModal 0.3s ease-in-out;
        }

        .modal-content {
            background: #ffffff;
            color: #212529;
            border-radius: 15px;
            width: 90%;
            max-width: 720px;
            max-height: 80vh;
            overflow-y: auto;
            padding-top: 0px;
            padding-right: 20px;
            padding-bottom: 30px;
            padding-left: 20px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
            animation: slideUp 0.4s ease;
            position: relative;
        }

        aside.section {
            max-width: 800px;
            margin: 30px auto;
            background: #ffffff;
            border: 1px solid #dee2e6;
            border-radius: 10px;
            padding: 20px 25px;
            box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
            color: #212529;
        }

        aside.section button {
            background-color: #f8f9fa;
            border: 2px solid #0d6efd;
            color: #0d6efd;
            padding: 10px 20px;
            font-weight: 600;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        aside.section button:hover {
            background-color: #0d6efd;
            color: white;
        }

        .dot {
            height: 15px;
            width: 15px;
            margin: 0 6px;
            background-color: #adb5bd;
            border-radius: 50%;
            display: inline-block;
            cursor: pointer;
        }

        .dot:hover, .dot.active {
            background-color: #0d6efd;
            box-shadow: 0 0 6px #0d6efd;
        }
       

        .btn-begin-test {
            background-color: #008365;
            color: white;
            border: none;
            padding: 12px 24px;
            font-weight: bold;
            border-radius: 8px;
        }

        .btn-begin-test:hover {
            transform: translateY(-3%) scale(1.01);
            box-shadow: 0 4px 8px rgba(0, 131, 101, 0.5);
            color: white;
        }

        .btn-begin-test:active {
            transform: translateY(-3%) scale(0.99);
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
            color: white;
        }

        .content img,
        .modal-body img {
            max-width: 100%;
            height: auto;
            display: block;
            margin: 10px auto;
        }

        .slide-footer {
            display: flex;
            justify-content: center;
            margin-top: 32px;
        }

        .slide-nav-buttons {
            display: flex;
            gap: 12px;
        }

        .slide-nav-buttons .btn-slide {
            background-color: #f1f3f5;
            color: #212529;
            border: 1px solid #ced4da;
            padding: 10px 20px;
            font-weight: 600;
            border-radius: 6px;
        }

        .slide-nav-buttons .btn-slide:hover {
            background-color: #e9ecef;
            box-shadow: 0 3px 6px rgba(0,0,0,0.08);
            color: #008365;
        }

        .slide-nav-buttons .btn-slide:active {
            background-color: #dee2e6;
            transform: scale(0.98);
        }

        @@media (max-width: 700px) {
            .slideshow-container {
                padding: 20px;
                max-width: 95%;
            }

            .modal-content {
                width: 90%;
            }

            .prev, .next {
                position: static;
                width: auto;
                display: block;
                margin: 10px auto;
                text-align: center;
            }
        }
        @@media (max-width: 1100px) {
            .filter-form {
                flex-direction: column !important;
                align-items: center;
            }

            .filter-group {
                width: 100%;
                margin-bottom: 10px;
            }

            .filter-group select {
                width: 100% !important;
            }

            .filter-form button {
                width: 100%;
            }
        }
    </style>
}

<div class="slideshow-container">
    <div class="slides fade-in active text-center">
        <h1 class="display-4 mb-4">Study Training Content</h1>
        <hr style="border-top: 1px solid #ccc;"/>
        <p style="color: black;">Select the subject you'd like to study below.</p>
        <form asp-action="Train" method="get" class="filter-form text-center mb-4" id="trainingFilterForm">
            <div class="d-flex justify-content-center gap-2 mb-3">
                <div class="filter-group">
                    <select name="categoryId" class="form-select w-auto" id="categorySelect" onchange="updateSubcategories()">
                        <option value="">Select Category</option>
                        @foreach (var category in (SelectList)ViewBag.Categories)
                        {
                            var selected = Context.Request.Query["categoryId"] == category.Value ? "selected" : "";
                            @:<option value="@category.Value" @selected>@category.Text</option>
                        }
                    </select>
                </div>
               <div class="filter-group">
                <select name="subcategoryId" class="form-select w-auto" id="subcategorySelect" disabled onchange="this.form.submit()">
                    <option value="">Select Subcategory</option>
                    @if (!string.IsNullOrEmpty(Context.Request.Query["categoryId"]))
                    {
                        foreach (var sub in (SelectList)ViewBag.Subcategories)
                        {
                            var selected = Context.Request.Query["subcategoryId"] == sub.Value ? "selected" : "";
                            @:<option value="@sub.Value" @selected>@sub.Text</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="filter-form">
            <button type="button" class="btn btn-begin-test" onclick="handleStart()" @(Model.Any() ? "" : "disabled")>Start</button>
        </div>
        </form>
    </div>

    @if (showTraining)
    {
        var i = 0;
        foreach (var item in Model)
        {
            i++;
            <div class="slides fade-in">
                <div class="num text-center">@i / @ViewBag.Count</div>
                <h3 class="text-center">@Html.DisplayFor(modelItem => item.Name)</h3>
                <div class="content ql-editor" onclick="showModal(@i)">
                    @Html.Raw(item.Content)
                </div>
                <br />
                <div class="center">
                    <button onclick="showModal(@i)" class="btn-begin-test">Learn More</button>
                </div>
            </div>

            <div class="modal" id="modal-@i">
                <div class="modal-content">
                    <div class="modal-header">
                        <button class="close" onclick="closeModal()">&times;</button>
                    </div>
                    <div class="modal-body ql-editor">
                        <div>@Html.Raw(item.Notes)</div>
                    </div>
                </div>
            </div>
        }

        <div class="slides fade-in text-center">
            <div class="content">
                <h3>Now you're ready to take the test!</h3>
                <p>Click the button below to continue.</p>
                <p><a class="btn btn-begin-test" asp-action="TestSelection" asp-controller="Testing">Begin Test</a></p>
                <div class="mt-4">
                    <p>You can review the training pages from links below:</p>
                    <span class="dot" onclick="currentSlide(1)"></span>
                    @for (int j = 1; j <= ViewBag.Count; j++)
                    {
                        <span class="dot" onclick="currentSlide(@j + 1)"></span>
                    }
                </div>
            </div>
        </div>
        <div class="text-center mt-4">
            <p class="text-muted">Use "previous" and "next" buttons to move between slides.</p>
        </div>
        <div class="slide-footer mt-4">
            <div class="slide-nav-buttons">
                <button class="btn-slide prev" type="button" onclick="plusSlides(-1)">❮ Previous</button>
                <button class="btn-slide next" type="button" onclick="plusSlides(1)">Next ❯</button>
            </div>
        </div>
    }
    else
    {
        <div class="text-center mt-4">
            <p class="text-muted">Please select both a category and subcategory to view training content.</p>
        </div>
    }

</div>
<script>
    function handleStart() {
        // If training is loaded, just go to the first slide
        const slides = document.querySelectorAll('.slides');
        if (slides.length > 1) {
            currentSlide(2); // skip to first training slide (1 is the intro)
        } else {
            document.getElementById("trainingFilterForm").submit();
        }
    }
    function updateSubcategories() {
        const categoryId = document.getElementById("categorySelect").value;
        const subSelect = document.getElementById("subcategorySelect");

        if (!categoryId) {
            subSelect.disabled = true;
            subSelect.innerHTML = '<option value="">Select Subcategory</option>';
            return;
        }

        fetch(`/Training/GetSubcategories?categoryId=${categoryId}`)
            .then(response => response.json())
            .then(data => {
                subSelect.disabled = false;
                subSelect.innerHTML = '<option value="">Select Subcategory</option>';
                data.forEach(sub => {
                    const option = document.createElement("option");
                    option.value = sub.id;
                    option.text = sub.type;
                    subSelect.appendChild(option);
                });
            });
    }
</script>