@model PhishFood.Models.Testing

@{
    ViewData["Title"] = "Create";
}
<head>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
</head>

<body>
    <h1 style="text-align: center;">Create Question</h1>

    <hr />
    <div class="row center">
        <div class="col-md-4" style="width: 60%">
            <form asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Question" class="control-label"></label>
                    <div id="editor"></div>
                    <input asp-for="Question" class="form-control" id="Question" name="Question" hidden />
                </div>
                <div class="form-group">
                    <label asp-for="Key" class="control-label"></label>
                    <input asp-for="Key" class="form-control" />
                    <span asp-validation-for="Key" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Option1" class="control-label"></label>
                    <input asp-for="Option1" class="form-control" />
                    <span asp-validation-for="Option1" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Option2" class="control-label"></label>
                    <input asp-for="Option2" class="form-control" />
                    <span asp-validation-for="Option2" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Option3" class="control-label"></label>
                    <input asp-for="Option3" class="form-control" />
                    <span asp-validation-for="Option3" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Explanation" class="control-label"></label>
                    <div id="editor2"></div>
                    <input asp-for="Explanation" class="form-control" id="Explanation" name="Explanation" hidden />
                    <span asp-validation-for="Explanation" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CategoryID" class="control-label"></label>
                    <select asp-for="CategoryID" class="form-control" asp-items="ViewBag.CategoryID"></select>
                </div>
                <div class="form-group">
                    <label asp-for="SubcategoryID" class="control-label"></label>
                    <select asp-for="SubcategoryID" class="form-control" asp-items="ViewBag.SubcategoryID"></select>
                </div>
                <div class="form-group center">
                    <input type="submit" value="Create" class="btn btn-primary save-button" />
                </div>
            </form>
        </div>
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <div class="alert alert-danger">
                @error.ErrorMessage
            </div>
        }
    </div>

    <div class="center">
        <a asp-action="Index">Back to List</a>
    </div>
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script>
            // Initialize Quill editor
            const toolbarOptions = [
                ['bold', 'italic', 'underline', 'strike'],
                ['blockquote'],
                ['link', 'image', 'video'],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                [{ 'indent': '-1' }, { 'indent': '+1' }],
                [{ 'size': ['small', false, 'large', 'huge'] }],
                [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
                ['clean']
            ];

            let quill = new Quill('#editor', {
                modules: { toolbar: toolbarOptions },
                theme: 'snow'
            });
            let quill2 = new Quill('#editor2', {
                modules: { toolbar: toolbarOptions },
                theme: 'snow'
            });

            // When the form is submitted, ensure the Quill content is placed in the hidden input
            $('form').submit(function (e) {
                // Get the Quill content (HTML) and set it to the hidden input field for Question
                var questionContent = quill.root.innerHTML;
                var explanationContent = quill2.root.innerHTML;
                $('#Question').val(questionContent); // Assign the content to the hidden input field
                $('#Explanation').val(explanationContent); // Assign the content to the hidden input field

                // If no content is entered, trigger validation
                if (!questionContent.trim()) {
                    e.preventDefault(); // Prevent form submission if content is empty
                    alert('The Question field cannot be empty.'); // You can customize this message
                }
            if (!explanationContent.trim()) {
                e.preventDefault(); // Prevent form submission if content is empty
                alert('The Explanation field cannot be empty.'); // You can customize this message
            }
            });
    </script>
</body>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
