@model IEnumerable<PhishFood.Models.Result>

@{
    ViewData["Title"] = "Index";
}

<h1 style="text-align: center;">Student Results</h1>
<hr />
<p class="center">
    <button class="create-button"><a asp-action="Create" style="text-decoration: none; color: white; font-size: 18px;">Create New</a></button>
</p>
<div class="center">
    <!-- Search Form -->
    <form method="get">
        <button type="submit" class="submit-button">Search</button>
        <input type="text" name="searchQuery" value="@ViewData["searchQuery"]" placeholder="Search..." />
    </form>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                <a href="@Url.Action("Index", new { searchQuery = ViewData["SearchQuery"], sortOrder = GetNextSortOrder() })">
                    Date
                    @if (ViewData["SortOrder"]?.ToString() == "date_asc")
                    {
                        <span>&#8593;</span> <!-- Upward arrow for Ascending -->
                    }
                    else if (ViewData["SortOrder"]?.ToString() == "date_desc")
                    {
                        <span>&#8595;</span> <!-- Downward arrow for Descending -->
                    }
                    else
                    {
                        <span>&#9650;</span> <!-- Default arrow (unsorted) -->
                    }
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Score)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Score)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Student.ID)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@functions {
    // This helper function will toggle between ascending, descending, and unsorted states
    public string GetNextSortOrder()
    {
        var currentSortOrder = ViewData["SortOrder"]?.ToString();

        if (currentSortOrder == "date_asc")
        {
            return "date_desc";
        }
        else if (currentSortOrder == "date_desc")
        {
            return "";  // Unsorted state
        }
        else
        {
            return "date_asc";
        }
    }
}